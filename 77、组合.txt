class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<Integer> path = new ArrayList<>();
        List<List<Integer>> res = new ArrayList<>();
        backtracking(1,n,k,path,res);
        return res;
    }
    public void backtracking(int start,int end,int k,List<Integer> path,List<List<Integer>> res){
        if(path.size()==k){
            res.add(new ArrayList<>(path));
            return;
        }
        for(int i=start;i<=end;i++){
            path.add(i);
            backtracking(i+1,end,k,path,res);
            path.remove(path.size()-1);
        }
    }
}