class Solution {
    public int getMaximumGold(int[][] grid) {
        int m = 0;
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[0].length; j++) {
                m = Math.max(m, dfs(grid, i, j));
            }
        }
        return m;
    }
    int dfs(int[][] grid, int x, int y) {
        if (x == -1 || y == -1 || x == grid.length || y == grid[0].length || grid[x][y] == 0) return 0;
        int g = grid[x][y];
        int gold = g;
        grid[x][y] = 0;
        int a = dfs(grid, x, y - 1);
        int b = dfs(grid, x - 1, y);
        int c = dfs(grid, x, y + 1);
        int d = dfs(grid, x + 1, y);
        gold += Math.max(a, Math.max(b, Math.max(c, d)));
        grid[x][y] = g;
        return gold;
    }
}